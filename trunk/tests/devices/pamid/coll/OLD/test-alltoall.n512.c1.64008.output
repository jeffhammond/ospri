starting test on 512 ranks 
number of barrier algorithms = {7,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 512 doubles took 0.001012 seconds (4.047773 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 1024 doubles took 0.000920 seconds (8.903773 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 2048 doubles took 0.000942 seconds (17.393855 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.000977 seconds (33.537754 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.002683 seconds (24.423236 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.001983 seconds (66.086834 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.002345 seconds (111.794088 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.002378 seconds (220.485243 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.002765 seconds (379.185542 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.003443 seconds (609.081024 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.005019 seconds (835.616935 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 512 doubles took 0.008204 seconds (0.499262 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 512 doubles took 0.000840 seconds (4.877682 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 512 doubles took 0.002744 seconds (1.492726 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 512 doubles took 0.000222 seconds (18.411161 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 1024 doubles took 0.008105 seconds (1.010725 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 1024 doubles took 0.000817 seconds (10.031340 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 1024 doubles took 0.002488 seconds (3.292583 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 1024 doubles took 0.000199 seconds (41.078872 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 2048 doubles took 0.008221 seconds (1.992988 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 2048 doubles took 0.000841 seconds (19.486218 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 2048 doubles took 0.002534 seconds (6.465632 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 2048 doubles took 0.000207 seconds (79.315958 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 4096 doubles took 0.008270 seconds (3.962483 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 4096 doubles took 0.000871 seconds (37.621962 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.002551 seconds (12.844636 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.000227 seconds (144.559790 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 8192 doubles took 0.010729 seconds (6.108367 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 8192 doubles took 0.001629 seconds (40.231017 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.003687 seconds (17.772830 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.000246 seconds (266.735858 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 16384 doubles took 0.011054 seconds (11.857902 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 16384 doubles took 0.001182 seconds (110.907903 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.003851 seconds (34.033261 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.000304 seconds (431.679744 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 32768 doubles took 0.012784 seconds (20.505792 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 32768 doubles took 0.001407 seconds (186.337237 MB/s) 
