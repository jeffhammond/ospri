starting test on 512 ranks 
number of barrier algorithms = {7,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 512 doubles took 0.001012 seconds (4.046229 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 1024 doubles took 0.000925 seconds (8.855097 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 2048 doubles took 0.000951 seconds (17.220723 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.000981 seconds (33.394800 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.002676 seconds (24.493774 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.001983 seconds (66.086251 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.002343 seconds (111.904566 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.002379 seconds (220.337217 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.002756 seconds (380.523231 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.003433 seconds (610.887397 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.005153 seconds (813.880962 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 512 doubles took 0.009391 seconds (0.436146 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 512 doubles took 0.000842 seconds (4.866978 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 512 doubles took 0.002672 seconds (1.532794 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 512 doubles took 0.000223 seconds (18.386883 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 1024 doubles took 0.008944 seconds (0.915870 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 1024 doubles took 0.000816 seconds (10.042477 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 1024 doubles took 0.002399 seconds (3.415014 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 1024 doubles took 0.000199 seconds (41.133274 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 2048 doubles took 0.009048 seconds (1.810821 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 2048 doubles took 0.000840 seconds (19.500757 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 2048 doubles took 0.002454 seconds (6.676855 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 2048 doubles took 0.000206 seconds (79.490569 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 4096 doubles took 0.009097 seconds (3.601939 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 4096 doubles took 0.000870 seconds (37.667128 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.002472 seconds (13.255717 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.000227 seconds (144.175776 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 8192 doubles took 0.011443 seconds (5.727216 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 8192 doubles took 0.001618 seconds (40.492627 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.003552 seconds (18.451808 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.000245 seconds (267.817718 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 16384 doubles took 0.011571 seconds (11.327928 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 16384 doubles took 0.001183 seconds (110.791481 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.003718 seconds (35.250435 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.000303 seconds (432.158327 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:-:MU) - 32768 doubles took 0.013091 seconds (20.024910 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:-:MU) - 32768 doubles took 0.001407 seconds (186.298255 MB/s) 
