starting test on 1024 ranks 
number of barrier algorithms = {6,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 1024 doubles took 0.001962 seconds (4.176016 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 2048 doubles took 0.001875 seconds (8.736203 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.001926 seconds (17.011694 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.001981 seconds (33.090206 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.005344 seconds (24.528300 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.004033 seconds (64.992017 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.004599 seconds (113.989250 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.004755 seconds (220.500659 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.005542 seconds (378.381921 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.009298 seconds (451.074033 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 1024 doubles took 0.018874 seconds (0.434029 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 1024 doubles took 0.001733 seconds (4.728120 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 1024 doubles took 0.005144 seconds (1.592607 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 1024 doubles took 0.000404 seconds (20.254291 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 2048 doubles took 0.018565 seconds (0.882504 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 2048 doubles took 0.001741 seconds (9.411761 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 2048 doubles took 0.004900 seconds (3.343828 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 2048 doubles took 0.000382 seconds (42.942255 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 4096 doubles took 0.018678 seconds (1.754371 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 4096 doubles took 0.001788 seconds (18.331537 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.004990 seconds (6.567062 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.000396 seconds (82.827086 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 8192 doubles took 0.018927 seconds (3.462581 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 8192 doubles took 0.001845 seconds (35.527547 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.005071 seconds (12.923031 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.000442 seconds (148.307354 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 16384 doubles took 0.027746 seconds (4.723997 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 16384 doubles took 0.009125 seconds (14.363348 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.007688 seconds (17.049018 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.000484 seconds (270.566394 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 32768 doubles took 0.023957 seconds (10.942283 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 32768 doubles took 0.002627 seconds (99.804736 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 32768 doubles took 0.007986 seconds (32.824648 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 32768 doubles took 0.000581 seconds (450.998005 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 65536 doubles took 0.027385 seconds (19.144929 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 65536 doubles took 0.002808 seconds (186.706682 MB/s) 
