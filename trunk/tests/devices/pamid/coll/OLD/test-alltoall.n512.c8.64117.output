starting test on 4096 ranks 
number of barrier algorithms = {6,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.007487 seconds (4.376506 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.007395 seconds (8.862292 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.007607 seconds (17.229640 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.007820 seconds (33.521793 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.018312 seconds (28.631472 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.016628 seconds (63.060378 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.020930 seconds (100.200093 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.035160 seconds (119.291019 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 4096 doubles took 0.077462 seconds (0.423022 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 4096 doubles took 0.006705 seconds (4.886885 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.019851 seconds (1.650687 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.001549 seconds (21.150419 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 8192 doubles took 0.073235 seconds (0.894875 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 8192 doubles took 0.006834 seconds (9.590243 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.019624 seconds (3.339557 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.001511 seconds (43.371040 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 16384 doubles took 0.073772 seconds (1.776710 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 16384 doubles took 0.006981 seconds (18.775206 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.019976 seconds (6.561511 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.001568 seconds (83.585873 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 32768 doubles took 0.075087 seconds (3.491193 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 32768 doubles took 0.007249 seconds (36.163670 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 32768 doubles took 0.020286 seconds (12.922612 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 32768 doubles took 0.001718 seconds (152.545829 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 65536 doubles took 0.113047 seconds (4.637803 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 65536 doubles took 0.018547 seconds (28.267344 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 65536 doubles took 0.029940 seconds (17.511097 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 65536 doubles took 0.001899 seconds (276.141346 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 131072 doubles took 0.109763 seconds (9.553111 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 131072 doubles took 0.012398 seconds (84.575736 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 131072 doubles took 0.031157 seconds (33.654543 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 131072 doubles took 0.002719 seconds (385.661671 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 262144 doubles took 0.118895 seconds (17.638620 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 262144 doubles took 0.015994 seconds (131.120586 MB/s) 
