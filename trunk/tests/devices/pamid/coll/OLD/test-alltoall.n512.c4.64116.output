starting test on 2048 ranks 
number of barrier algorithms = {6,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 2048 doubles took 0.003802 seconds (4.309812 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.003714 seconds (8.823906 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.003818 seconds (17.164589 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.003924 seconds (33.399453 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.009353 seconds (28.026847 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.008067 seconds (64.990859 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.009088 seconds (115.380425 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.011336 seconds (184.995990 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.018073 seconds (232.075870 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 2048 doubles took 0.038523 seconds (0.425307 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 2048 doubles took 0.003399 seconds (4.820332 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 2048 doubles took 0.010007 seconds (1.637180 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 2048 doubles took 0.000798 seconds (20.530267 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 4096 doubles took 0.036652 seconds (0.894036 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 4096 doubles took 0.003440 seconds (9.525954 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.009709 seconds (3.374899 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.000770 seconds (42.574885 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 8192 doubles took 0.036916 seconds (1.775281 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 8192 doubles took 0.003509 seconds (18.677654 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.009874 seconds (6.637200 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.000800 seconds (81.920192 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 16384 doubles took 0.036975 seconds (3.544883 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 16384 doubles took 0.003649 seconds (35.917462 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.010017 seconds (13.085605 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.000881 seconds (148.854324 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 32768 doubles took 0.054228 seconds (4.834123 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 32768 doubles took 0.007978 seconds (32.860332 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 32768 doubles took 0.015224 seconds (17.219261 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 32768 doubles took 0.000955 seconds (274.617289 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 65536 doubles took 0.049622 seconds (10.565637 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 65536 doubles took 0.006438 seconds (81.438321 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 65536 doubles took 0.015848 seconds (33.082814 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 65536 doubles took 0.001142 seconds (459.111649 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 131072 doubles took 0.055214 seconds (18.991057 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 131072 doubles took 0.005786 seconds (181.216699 MB/s) 
