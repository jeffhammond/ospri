starting test on 1024 ranks 
number of barrier algorithms = {6,0} 
number of alltoall algorithms = {1,4} 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 1024 doubles took 0.001957 seconds (4.185562 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 2048 doubles took 0.001857 seconds (8.821571 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 4096 doubles took 0.001909 seconds (17.162193 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 8192 doubles took 0.001970 seconds (33.269781 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 16384 doubles took 0.005362 seconds (24.444308 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 32768 doubles took 0.004026 seconds (65.105086 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 65536 doubles took 0.004601 seconds (113.957351 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 131072 doubles took 0.004751 seconds (220.689365 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 262144 doubles took 0.005482 seconds (382.537699 MB/s) 
safe alltoall algorithm 0 (I1:Alltoall:P2P:P2P) - 524288 doubles took 0.008911 seconds (470.673969 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 1024 doubles took 0.018551 seconds (0.441604 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 1024 doubles took 0.001734 seconds (4.724311 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 1024 doubles took 0.005244 seconds (1.562271 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 1024 doubles took 0.000407 seconds (20.137196 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 2048 doubles took 0.018120 seconds (0.904173 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 2048 doubles took 0.001740 seconds (9.416278 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 2048 doubles took 0.004985 seconds (3.286602 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 2048 doubles took 0.000382 seconds (42.919054 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 4096 doubles took 0.018236 seconds (1.796886 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 4096 doubles took 0.001786 seconds (18.347022 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 4096 doubles took 0.005070 seconds (6.462766 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 4096 doubles took 0.000396 seconds (82.739770 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 8192 doubles took 0.018491 seconds (3.544245 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 8192 doubles took 0.001844 seconds (35.538119 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 8192 doubles took 0.005165 seconds (12.688643 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 8192 doubles took 0.000430 seconds (152.533236 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 16384 doubles took 0.027593 seconds (4.750208 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 16384 doubles took 0.009119 seconds (14.373311 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 16384 doubles took 0.007879 seconds (16.635395 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 16384 doubles took 0.000485 seconds (270.113357 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 32768 doubles took 0.024078 seconds (10.887358 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 32768 doubles took 0.002504 seconds (104.683407 MB/s) 
fast alltoall algorithm 2 (I0:Pairwise:-:ShortMU) - 32768 doubles took 0.008193 seconds (31.995513 MB/s) 
fast alltoall algorithm 3 (I0:M2MComposite:MU:MU) - 32768 doubles took 0.000582 seconds (450.356856 MB/s) 
fast alltoall algorithm 0 (I0:Pairwise:SHMEM:MU) - 65536 doubles took 0.027937 seconds (18.766601 MB/s) 
fast alltoall algorithm 1 (I0:M2MComposite:SHMEM:MU) - 65536 doubles took 0.002809 seconds (186.619622 MB/s) 
