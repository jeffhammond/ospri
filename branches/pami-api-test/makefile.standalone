# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
#  --------------------------------------------------------------- 
# Licensed Materials - Property of IBM                             
# Blue Gene/Q 5765-PER 5765-PRP                                    
#                                                                  
# (C) Copyright IBM Corp. 2011, 2012 All Rights Reserved           
# US Government Users Restricted Rights -                          
# Use, duplication, or disclosure restricted                       
# by GSA ADP Schedule Contract with IBM Corp.                      
#                                                                  
#  --------------------------------------------------------------- 
#                                                                  
# end_generated_IBM_copyright_prolog

# Change these parameters for your platform
PAMI_INCLUDE   := 
PAMI_LIB       :=
PAMI_LIBNAME   := 
C_COMPILER     := mpicc 
CXX_COMPILER   := mpicxx
LINKER         := mpicxx

##### You shouldn't have to edit under this line ######
CC        := ${C_COMPILER}  -O0 -g -I${PAMI_INCLUDE}  -I${PAMI_INCLUDE}/default
CXX       := ${CXX_COMPILER} -O0 -g -I${PAMI_INCLUDE} -I${PAMI_INCLUDE}/default
LD        := ${LINKER}    -L${PAMI_LIB} ${PAMI_LIBNAME} -lpthread -lrt
ECHO      := echo

MODULES   := p2p client collectives context endpoint extensions p2p/send p2p/get p2p/put p2p/rget p2p/rput \
	     p2p/send/send_to_self_immed p2p/send/send_to_self_perf time extensions/test extensions/torus
SRC_DIR   := $(addprefix ./,$(MODULES))
BUILD_DIR := $(addprefix build/,$(MODULES))

SRC       := $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.c))
SRC       += $(foreach sdir,$(SRC_DIR),$(wildcard $(sdir)/*.cc))

OBJ       += $(patsubst %.c,build/%.o,$(SRC))
OBJ       += $(patsubst %.cc,build/%.o,$(SRC))

EXE       := $(patsubst %.o,build/%.x,$(OBJ))

OUT       := $(patsubst %.x,build/%.out,$(EXE))

INCLUDES  := $(addprefix -I,$(SRC_DIR))

vpath %.cc $(SRC_DIR)
vpath %.c  $(SRC_DIR)

define make-goal
.SUFFIXES:

.SUFFIXES: .o .c .cc 

.SECONDARY:

.c.o::
	@ $(ECHO) "[CC]:  $$< -> $$@"
	@ $(CC) $(INCLUDES) -c $$< -o build/$$@

.cc.o::
	@ $(ECHO) "[CXX]: $$< -> $$@"
	@ $(CXX) $(INCLUDES) -c $$< -o build/$$@

build/%.x: %.o
	@ $(ECHO) "  [LD]: $$< -> $$@"
	@ $(LD) build/$$< -o $$@
endef

.PHONY: all checkdirs clean

COLLECTIVES_MULTIEP_TESTS = build/collectives/allgather_multiep.x \
build/collectives/allgatherv_multiep.x \
build/collectives/allreduce_multiep.x \
build/collectives/allreduce_query_multiep.x \
build/collectives/alltoall_multiep.x \
build/collectives/alltoallv_multiep.x \
build/collectives/amgather_multiep.x \
build/collectives/barrier_multiep.x \
build/collectives/bcast_multiep.x \
build/collectives/gather_multiep.x \
build/collectives/gatherv_multiep.x \
build/collectives/reduce_multiep.x \
build/collectives/reduce_query_multiep.x \
build/collectives/reduce_scatter_multiep.x \
build/collectives/scan_multiep.x \
build/collectives/scatter_multiep.x \
build/collectives/scatterv_multiep.x

COLLECTIVES_TESTS = ${COLLECTIVES_MULTIEP_TESTS} \
build/collectives/allgather.x \
build/collectives/allgather_contig.x \
build/collectives/allgather_subcomm.x \
build/collectives/allgatherv.x \
build/collectives/allgatherv_contig.x \
build/collectives/allgatherv_int.x \
build/collectives/allgatherv_int_contig.x \
build/collectives/allreduce.x \
build/collectives/allreduce_contig.x \
build/collectives/allreduce_query.x \
build/collectives/allreduce_subcomm.x \
build/collectives/allreduce_subcomm_query.x \
build/collectives/alltoall.x \
build/collectives/alltoall_contig.x \
build/collectives/alltoallv.x \
build/collectives/alltoallv_contig.x \
build/collectives/alltoallv_int.x \
build/collectives/alltoallv_int_contig.x \
build/collectives/alltoallv_int_subcomm.x \
build/collectives/ambcast.x \
build/collectives/ambcast_contig.x \
build/collectives/amgather.x \
build/collectives/amreduce.x \
build/collectives/amscatter.x \
build/collectives/barrier.x \
build/collectives/barrier_query.x \
build/collectives/barrier_subcomm.x \
build/collectives/barrier_subcomm_query.x \
build/collectives/bcast.x \
build/collectives/bcast_contig.x \
build/collectives/bcast_query.x \
build/collectives/bcast_subcomm.x \
build/collectives/bcast_subcomm_query.x \
build/collectives/gather.x \
build/collectives/gather_contig.x \
build/collectives/gather_subcomm.x \
build/collectives/gatherv.x \
build/collectives/gatherv_contig.x \
build/collectives/gatherv_int.x \
build/collectives/gatherv_int_contig.x \
build/collectives/geometry.x \
build/collectives/geom_bomb.x \
build/collectives/reduce.x \
build/collectives/reduce_contig.x \
build/collectives/reduce_query.x \
build/collectives/reduce_scatter.x \
build/collectives/reduce_scatter_contig.x \
build/collectives/reduce_scatter_subcomm.x \
build/collectives/reduce_subcomm.x \
build/collectives/scan.x \
build/collectives/scan_contig.x \
build/collectives/scan_subcomm.x \
build/collectives/scatter.x \
build/collectives/scatter_contig.x \
build/collectives/scatter_subcomm.x \
build/collectives/scatterv.x \
build/collectives/scatterv_int.x

BASE_TESTS = build/init.x \
build/init_coll.x

CLIENT_TESTS = build/client/configuration.x \
build/client/hello.x \
build/client/multi-client.x

CONTEXT_TESTS = build/context/advance.x \
build/context/create.x \
build/context/lock.x \
build/context/multi-advance.x \
build/context/multi-create.x \
build/context/multi-create2.x \
build/context/post-multithreaded-perf.x \
build/context/post-multithreaded.x \
build/context/post-perf.x \
build/context/post.x \
build/context/post-stress.x

ENDPOINT_TESTS = build/endpoint/endpoint_table.x

P2P_TESTS = build/p2p/send/send_immediate_pingpong_ring.x \
build/p2p/send_latency.x \
build/p2p/send_latency_typed.x \
build/p2p/sendimmediate_latency.x \
build/p2p/adi.x \
build/p2p/default-send-nplus-minus1.x \
build/p2p/default-send.x \
build/p2p/get/simple_get_func.x \
build/p2p/immediate_send.x \
build/p2p/immediate_send_overflow.x \
build/p2p/put/simple_put_func.x \
build/p2p/rget/simple_rget_func.x \
build/p2p/rput/simple_rput_func.x \
build/p2p/send/default-send-1.x \
build/p2p/send/long-header-matrix.x \
build/p2p/send/long-header.x \
build/p2p/send/mmps.x \
build/p2p/send/rdma-matrix.x \
build/p2p/send/send_flood_perf.x \
build/p2p/send/send_to_self.x \
build/p2p/send/send_to_self_immed/send_to_self_immed.x \
build/p2p/send/send_to_self_perf/send_to_self_perf.x \
build/p2p/send/send_unexpected_func.x \
build/p2p/send/shmem-matrix.x \
build/p2p/send/sqmr.x \
build/p2p/simple-send-immediate.x

TIME_TESTS = build/time/tick.x \
build/time/time.x \
build/time/timebase.x \

EXTENSION_TESTS = build/extensions/test/extension_test.x \
build/extensions/torus/extension_torus.x 

TESTS = ${COLLECTIVES_TESTS} ${BASE_TESTS} ${CLIENT_TESTS} ${CONTEXT_TESTS} \
        ${ENDPOINT_TESTS} ${P2P_TESTS} ${TIME_TESTS} ${EXTENSION_TESTS}

## These don't build
# build/p2p/send/eager_concurrency.x
# build/p2p/send/long-header-hard-match.x 
# build/p2p/send/long-header-hard-opp.x 
# build/extensions/multisend/multicast.x \
# build/extensions/multisend/multicast_as.x \
# build/extensions/multisend/multicast_global.x \
# build/extensions/multisend/multicast_local.x \
# build/extensions/multisend/multicast_local_as.x \
# build/extensions/multisend/multicast_pwq.x \
# build/extensions/multisend/multicast_pwq_as.x \
# build/extensions/multisend/multicombine_global.x \
# build/extensions/multisend/multisync_global.x \
# build/extensions/topology/topology.x


all: checkdirs ${TESTS}
checkdirs: $(BUILD_DIR)

run: ${TESTS}
	@runtests $^ 2>&1 | tee "run.`date +'%y.%m.%d.%H:%M:%S'`.out"

runmultiep: ${COLLECTIVES_MULTIEP_TESTS}
	@runtests $^ 2>&1 | tee "run.`date +'%y.%m.%d.%H:%M:%S'`.out"

$(BUILD_DIR):
	@mkdir -p $@

clean:
	@rm -rf $(BUILD_DIR)

$(foreach bdir,$(BUILD_DIR),$(eval $(call make-goal,$(bdir))))
